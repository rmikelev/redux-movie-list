{"version":3,"sources":["App.js","redux/actions/movieList.actions.js","services/movieApi.service.js","components/SearchBar.js","components/MovieSearch.js","redux/middleware/logger.js","redux/enhancers/monitorReducerEnhancer.js","redux/reducers/movieList.reducer.js","redux/reducers/index.js","components/Navbar.js","index.js","redux/store.js"],"names":["App","movieList","getMovieList","useEffect","list","map","movie","src","Poster","alt","Title","imdbID","connect","state","movieListReducer","type","apiKey","MovieApiService","title","page","axios","get","then","res","data","catch","err","console","error","id","SearchBar","onSearch","useState","setTitle","onSubmit","e","preventDefault","className","htmlFor","onChange","target","value","MovieSearch","addMovieToList","movieApiService","searchResults","setSearchResults","a","getMoviesByTitle","results","Search","addToMovieList","getMovieById","result","onClick","payload","logger","store","next","action","group","info","log","getState","groupEnd","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","number","start","performance","now","newState","end","diff","Math","round","localStorage","getItem","JSON","parse","push","setItem","stringify","rootReducer","combineReducers","Navbar","Container","Brand","href","Toggle","Collapse","Nav","Link","ReactDOM","render","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","composeWithDevTools","configureStore","exact","path","component","document","getElementById"],"mappings":"sLAKIA,EAAM,YAAmC,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,aAKtB,OAJAC,qBAAU,WACRD,MACC,CAACA,IAGF,gCACE,+CAEED,GAAaA,EAAUG,MAAQH,EAAUG,KAAKC,KAAI,SAACC,GAAD,OAChD,gCACE,qBAAKC,IAAKD,EAAME,OAAQC,IAAG,UAAKH,EAAMI,MAAX,aAC3B,6BAAMJ,EAAMI,UAFJJ,EAAMK,eAmBXX,EALfA,EAAMY,aAJkB,SAAAC,GAAK,MAAK,CAChCZ,UAAWY,EAAMC,oBAKjB,CAAEZ,aC9BwB,iBAAO,CAAEa,KAAM,oBD4BrCH,CAGJZ,G,0EE/BIgB,EAAS,WAEMC,E,gGACjB,SAAiBC,GAAkB,IAAXC,EAAU,uDAAH,EAC3B,OAAOC,IAAMC,IAAN,qCAAwCH,EAAxC,iBAAsDC,EAAtD,mBAAqEH,IACvEM,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,Q,0BAGtC,SAAaG,GACT,OAAOT,IAAMC,IAAN,qCAAwCQ,EAAxC,mBAAqDb,IACvDM,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,U,KCY3BI,EAvBG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,EAA0BC,qBAA1B,mBAAOd,EAAP,KAAce,EAAd,KAQA,OACI,uBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBAEFL,EAASb,IAIT,UACI,sBAAKmB,UAAU,aAAf,UACI,uBAAOC,QAAQ,QAAf,mBACA,uBACIvB,KAAK,OACLwB,SAAU,SAACJ,GAAD,OAAOF,EAASE,EAAEK,OAAOC,aAG3C,wBAAQ1B,KAAK,SAAb,wBCXR2B,EAAc,YAAyB,IAAtBC,EAAqB,EAArBA,eACXC,EAAkB,IAAI3B,EAE5B,EAA0Ce,qBAA1C,mBAAOa,EAAP,KAAsBC,EAAtB,KACMf,EAAQ,uCAAG,WAAOb,GAAP,eAAA6B,EAAA,sEACSH,EAAgBI,iBAAiB9B,GAD1C,OACP+B,EADO,OAGbH,EAAiBG,EAAQC,QAHZ,2CAAH,sDAMRC,EAAc,uCAAG,WAAOtB,GAAP,eAAAkB,EAAA,sEACEH,EAAgBQ,aAAavB,GAD/B,OACbwB,EADa,OAGnBV,EAAeU,GAHI,2CAAH,sDAMpB,OACI,gCACI,cAAC,EAAD,CAAWtB,SAAUA,IAEjBc,GAAiBA,EAAcxC,KAAI,SAACC,GAAD,OAC/B,gCACI,qBAAKC,IAAKD,EAAME,OAAQC,IAAG,UAAKH,EAAMI,MAAX,aAC3B,6BAAMJ,EAAMI,QACZ,wBAAQ4C,QAAS,kBAAMH,EAAe7C,EAAMK,SAA5C,2BAHML,EAAMK,eAgBrB+B,EALfA,EAAc9B,YACV,KACA,CAAE+B,eHzCwB,SAACY,GAAD,MAAc,CAAExC,KAAM,oBAAqBwC,aGuC3D3C,CAGZ8B,G,gBCnCac,EATA,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAC,GAC5BhC,QAAQiC,MAAMD,EAAO5C,MACrBY,QAAQkC,KAAK,cAAeF,GAC5B,IAAIN,EAASK,EAAKC,GAGlB,OAFAhC,QAAQmC,IAAI,aAAcL,EAAMM,YAChCpC,QAAQqC,WACDX,KCYIY,EAfb,SAAAC,GAAW,OAAI,SAACC,EAASC,EAAcC,GAYrC,OAAOH,GAXkB,SAACrD,EAAO8C,GAC/B,IALQW,EAKFC,EAAQC,YAAYC,MACpBC,EAAWP,EAAQtD,EAAO8C,GAC1BgB,EAAMH,YAAYC,MAClBG,GAREN,EAQWK,EAAMJ,EARPM,KAAKC,MAAe,IAATR,GAAgB,KAY7C,OAFA3C,QAAQmC,IAAI,wBAAyBc,GAE9BF,IAG4BN,EAAcC,K,QCcxCvD,EA3BU,WAAmC,IAAlCD,EAAiC,uDAFtC,KAE2B8C,EAAW,uCACvD,OAAOA,EAAO5C,MACV,IAAK,iBACD,IAAMd,EAAY8E,aAAaC,QAAQ,aAEvC,OAAO/E,EACDgF,KAAKC,MAAMjF,GACXY,EAEV,IAAK,oBACD,IAAIZ,EAAY8E,aAAaC,QAAQ,aAUrC,OATI/E,GACAA,EAAYgF,KAAKC,MAAMjF,IACbG,KAAK+E,KAAKxB,EAAOJ,SAE3BtD,EAAY,CAAEG,KAAM,CAAEuD,EAAOJ,UAGjCwB,aAAaK,QAAQ,YAAaH,KAAKI,UAAUpF,IAE1CA,EAEX,QACI,OAAOY,ICjBJyE,EAJKC,0BAAgB,CAChCzE,qB,4BCmBW0E,EAlBA,WACX,OACI,cAAC,IAAD,UACI,eAACC,EAAA,EAAD,WACI,cAAC,IAASC,MAAV,CAAgBC,KAAK,IAArB,6BACA,cAAC,IAASC,OAAV,IACI,cAAC,IAASC,SAAV,UACI,eAACC,EAAA,EAAD,WACI,cAACA,EAAA,EAAIC,KAAL,CAAUJ,KAAK,IAAf,kBACA,cAACG,EAAA,EAAIC,KAAL,CAAUJ,KAAK,cAAf,8BCJ5BK,IAASC,OACP,cAAC,IAAD,CAAUxC,MCFG,SAAwByC,GACnC,IAAMC,EAAc,CAACC,EAAkBC,KACjCC,EAAY,CAACC,kBAAe,WAAf,EAAmBJ,GAAclC,GAEpD,OAAOC,sBAAYoB,EAAaY,EAAgBM,sBAAmB,WAAnB,EAAuBF,IDFxDG,GAAjB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlE,IACjC,cAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,cAAcC,UAAW5G,YAIjD6G,SAASC,eAAe,W","file":"static/js/main.5c4d8c47.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getMovieList } from './redux/actions/movieList.actions';\n\nlet App = ({ movieList, getMovieList  }) => {\n  useEffect(() => {\n    getMovieList();\n  }, [getMovieList])\n\n  return (\n    <div>\n      <h1>My Movie List</h1>\n      {\n        movieList && movieList.list && movieList.list.map((movie) => (\n          <div key={movie.imdbID}>\n            <img src={movie.Poster} alt={`${movie.Title} poster`} />\n            <h3>{ movie.Title }</h3>\n          </div>\n        ))\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  movieList: state.movieListReducer,\n});\n\nApp = connect(\n  mapStateToProps,\n  { getMovieList }\n)(App)\n\nexport default App;\n","\nexport const getMovieList = () => ({ type: 'GET_MOVIE_LIST' });\nexport const addMovieToList = (payload) => ({ type: 'ADD_MOVIE_TO_LIST', payload });","import axios from 'axios';\nconst apiKey = '379060c8';\n\nexport default class MovieApiService {\n    getMoviesByTitle(title, page = 1) {\n        return axios.get(`https://www.omdbapi.com/?s=${title}&page=${page}&apikey=${apiKey}`)\n            .then((res) => res.data)\n            .catch((err) => console.error(err));\n    }\n\n    getMovieById(id) {\n        return axios.get(`https://www.omdbapi.com/?i=${id}&apikey=${apiKey}`)\n            .then((res) => res.data)\n            .catch((err) => console.error(err));\n    }\n}","import { useState } from \"react\";\n\nconst SearchBar = ({ onSearch }) => {\n    const [title, setTitle] = useState();\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n\n        onSearch(title);\n    }\n\n    return (\n        <form onSubmit={onFormSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input\n                    type=\"text\"\n                    onChange={(e) => setTitle(e.target.value)}    \n                />\n            </div>\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}\n\nexport default SearchBar;","import { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { addMovieToList } from '../redux/actions/movieList.actions';\n\nimport MovieApiService from '../services/movieApi.service';\n\nimport SearchBar from './SearchBar';\n\nlet MovieSearch = ({ addMovieToList }) => {\n    const movieApiService = new MovieApiService();\n\n    const [searchResults, setSearchResults] = useState(); \n    const onSearch = async (title) => {\n        const results = await movieApiService.getMoviesByTitle(title);\n\n        setSearchResults(results.Search);\n    }\n\n    const addToMovieList = async (id) => {\n        const result = await movieApiService.getMovieById(id);\n\n        addMovieToList(result);\n    }\n\n    return (\n        <div>\n            <SearchBar onSearch={onSearch}/>\n            {\n                searchResults && searchResults.map((movie) => (\n                    <div key={movie.imdbID}>\n                        <img src={movie.Poster} alt={`${movie.Title} poster`} />\n                        <h3>{ movie.Title }</h3>\n                        <button onClick={() => addToMovieList(movie.imdbID)}>Add To List</button>\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nMovieSearch = connect(\n    null,\n    { addMovieToList }\n)(MovieSearch)\n\nexport default MovieSearch;","const logger = store => next => action => {\n    console.group(action.type)\n    console.info('dispatching', action)\n    let result = next(action)\n    console.log('next state', store.getState())\n    console.groupEnd()\n    return result\n}\n  \nexport default logger","const round = number => Math.round(number * 100) / 100;\n\nconst monitorReducerEnhancer =\n  createStore => (reducer, initialState, enhancer) => {\n    const monitoredReducer = (state, action) => {\n      const start = performance.now()\n      const newState = reducer(state, action)\n      const end = performance.now()\n      const diff = round(end - start)\n\n      console.log('reducer process time:', diff)\n\n      return newState\n    }\n\n    return createStore(monitoredReducer, initialState, enhancer)\n  }\n\nexport default monitorReducerEnhancer","const initialState = null;\n\nconst movieListReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'GET_MOVIE_LIST': {\n            const movieList = localStorage.getItem('movieList');\n\n            return movieList\n                ? JSON.parse(movieList)\n                : state;\n        }\n        case 'ADD_MOVIE_TO_LIST': {\n            let movieList = localStorage.getItem('movieList');\n            if (movieList) {\n                movieList = JSON.parse(movieList);\n                movieList.list.push(action.payload);\n            } else {\n                movieList = { list: [ action.payload ] }\n            }\n\n            localStorage.setItem('movieList', JSON.stringify(movieList));\n\n            return movieList;\n        }\n        default:\n            return state;\n    }\n}\n\nexport default movieListReducer;","import { combineReducers } from \"redux\";\n\nimport movieListReducer from \"./movieList.reducer\";\n\nconst rootReducer = combineReducers({\n    movieListReducer\n});\n\nexport default rootReducer;","\nimport { Link } from 'react-router-dom';\nimport RBNavbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/container';\nimport Nav from 'react-bootstrap/Nav';\n\nconst Navbar = () => {\n    return (\n        <RBNavbar>\n            <Container>\n                <RBNavbar.Brand href=\"/\">Movie Data Base</RBNavbar.Brand>\n                <RBNavbar.Toggle /> \n                    <RBNavbar.Collapse> \n                        <Nav>\n                            <Nav.Link href=\"/\">Home</Nav.Link>\n                            <Nav.Link href=\"/movie-list\">Movie</Nav.Link>  \n                        </Nav> \n                    </RBNavbar.Collapse>\n            </Container>\n\n        </RBNavbar>\n    );\n}\n\nexport default Navbar;","import { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MovieSearch from './components/MovieSearch';\n\n\nimport configureStore from './redux/store';\nimport Navbar from './components/Navbar';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <Router>\n      <Navbar/> \n      <Switch>\n        <Route exact path=\"/\" component={MovieSearch} />\n        <Route exact path=\"/movie-list\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n","import { applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport loggerMiddleware from './middleware/logger';\nimport monitorReducerEnhancer from './enhancers/monitorReducerEnhancer';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers';\n\nexport default function configureStore(preloadedState) {\n    const middlewares = [loggerMiddleware, thunkMiddleware];\n    const enhancers = [applyMiddleware(...middlewares), monitorReducerEnhancer];\n\n    return createStore(rootReducer, preloadedState, composeWithDevTools(...enhancers))\n}"],"sourceRoot":""}