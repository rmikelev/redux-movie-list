{"version":3,"sources":["App.js","redux/actions/movieList.actions.js","services/movieApi.service.js","components/SearchBar.js","components/MovieSearch.js","redux/middleware/logger.js","redux/enhancers/monitorReducerEnhancer.js","redux/reducers/movieList.reducer.js","redux/reducers/index.js","components/Navbar.js","index.js","redux/store.js"],"names":["App","movieList","getMovieList","removeMovieFromList","useEffect","Container","Row","list","map","movie","Col","xs","md","lg","Card","Img","variant","src","Poster","alt","Title","Body","Button","onClick","imdbID","connect","state","movieListReducer","type","payload","apiKey","MovieApiService","title","page","axios","get","then","res","data","catch","err","console","error","id","SearchBar","onSearch","useState","setTitle","inline","onSubmit","e","preventDefault","sm","InputGroup","className","Form","Control","name","placeholder","onChange","target","value","required","MovieSearch","addMovieToList","movieApiService","searchResults","setSearchResults","a","getMoviesByTitle","results","Search","addToMovieList","getMovieById","result","logger","store","next","action","group","info","log","getState","groupEnd","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","number","start","performance","now","newState","end","diff","Math","round","localStorage","getItem","JSON","parse","push","setItem","stringify","updatedList","filter","movieFromList","length","removeItem","rootReducer","combineReducers","Navbar","bg","expand","Brand","href","width","height","Toggle","Collapse","Nav","Link","ReactDOM","render","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","composeWithDevTools","configureStore","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.884841fc.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getMovieList, removeMovieFromList } from '../src/redux/actions/movieList.actions';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row  from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\n\n\nlet App = ({ movieList, getMovieList, removeMovieFromList }) => {\n  useEffect(() => {\n    getMovieList();\n  }, [getMovieList])\n\n  return (\n    <Container>\n      <h1>My Movie List</h1>\n      <Row>\n        {\n          movieList && movieList.list && movieList.list.map((movie) => (\n            <Col xs={12} md={6} lg={3} key={movie.imdbID}>\n              <Card>  \n                <Card.Img variant=\"top\" src={movie.Poster} alt={`${movie.Title} poster`} />\n                <Card.Body>\n                <h3>{ movie.Title }</h3>\n                <Button onClick={() => removeMovieFromList(movie)}>Remove From List </Button>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))    \n        }\n      </Row>\n    </Container>   \n  );\n}\n\nconst mapStateToProps = state => ({\n  movieList: state.movieListReducer\n});\n\nApp = connect(\n  mapStateToProps,\n  { getMovieList, removeMovieFromList }\n)(App)\n\n\nexport default App;","export const getMovieList = () => ({ type: 'GET_MOVIE_LIST' });\nexport const addMovieToList = (payload) => ({ type: 'ADD_MOVIE_TO_LIST', payload });\nexport const removeMovieFromList= (payload) => ({ type: 'REMOVE_MOVIE_FROM_LIST', payload });","import axios from 'axios';\nconst apiKey = '379060c8';\n\nexport default class MovieApiService {\n    getMoviesByTitle(title, page = 1) {\n        return axios.get(`https://www.omdbapi.com/?s=${title}&page=${page}&apikey=${apiKey}`)\n            .then((res) => res.data)\n            .catch((err) => console.error(err));\n    }\n\n    getMovieById(id) {\n        return axios.get(`https://www.omdbapi.com/?i=${id}&apikey=${apiKey}`)\n            .then((res) => res.data)\n            .catch((err) => console.error(err));\n    }\n}","import { useState } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst SearchBar = ({ onSearch }) => {\n    const [title, setTitle] = useState();\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n\n        onSearch(title);\n    }\n\n    return (\n        <form inline onSubmit={onFormSubmit}>\n            <Row>\n                <Col sm={9}>\n                <InputGroup className=\"form-group mb-3\">\n                    <Form.Control          \n                        type=\"text\"\n                        id=\"movieTitle\"\n                        name=\"movieTitle\"\n                        placeholder=\"Search for a movie, show, or episode by name...\"\n                        onChange={(e) => setTitle(e.target.value)}\n                        required \n                />\n                </InputGroup>\n            </Col>\n            <Col sm={3}>\n            <button type=\"submit\" className=\"w-100 mb-3\">Search</button>\n            </Col>\n            </Row>\n        </form>\n    )\n}\n\nexport default SearchBar;","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addMovieToList } from '../redux/actions/movieList.actions';\nimport MovieApiService from '../services/movieApi.service';\nimport SearchBar from './SearchBar';\nimport Container from 'react-bootstrap/container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nlet MovieSearch = ({ addMovieToList }) => {\n    const movieApiService = new MovieApiService();\n\n    const [searchResults, setSearchResults] = useState(); \n    const onSearch = async (title) => {\n        const results = await movieApiService.getMoviesByTitle(title);\n\n        setSearchResults(results.Search);\n    }\n\n    const addToMovieList = async (id) => {\n        const result = await movieApiService.getMovieById(id);\n\n        addMovieToList(result);\n    }\n\n    return (\n        <Container>\n            <SearchBar onSearch={onSearch}/>\n            <Row>\n            {\n                searchResults && searchResults.map((movie) => (\n                    <Col xs={12} md={6} lg= {3} key={movie.imdbID}>\n                        <Card>  \n                            <Card.Img variant= \"top\" src={movie.Poster} alt={`${movie.Title} poster`} />\n                        <Card.Body>\n                            <Card.Title>{ movie.Title }</Card.Title>\n\n                        <Button variant=\"primary\"onClick={() => addToMovieList(movie.imdbID)}>Add To List</Button>\n                        </Card.Body>                        \n                        </Card>\n                        \n\n                    </Col>\n                ))\n            }\n\n            </Row>\n            \n        </Container>\n    )\n}\n\nMovieSearch = connect(\n    null,\n    { addMovieToList }\n)(MovieSearch)\n\nexport default MovieSearch;","const logger = store => next => action => {\n    console.group(action.type)\n    console.info('dispatching', action)\n    let result = next(action)\n    console.log('next state', store.getState())\n    console.groupEnd()\n    return result\n}\n  \nexport default logger","const round = number => Math.round(number * 100) / 100;\n\nconst monitorReducerEnhancer =\n  createStore => (reducer, initialState, enhancer) => {\n    const monitoredReducer = (state, action) => {\n      const start = performance.now()\n      const newState = reducer(state, action)\n      const end = performance.now()\n      const diff = round(end - start)\n\n      console.log('reducer process time:', diff)\n\n      return newState\n    }\n\n    return createStore(monitoredReducer, initialState, enhancer)\n  }\n\nexport default monitorReducerEnhancer","const initialState = null;\n\nconst movieListReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'GET_MOVIE_LIST': {\n            const movieList = localStorage.getItem('movieList');\n\n            return movieList\n                ? JSON.parse(movieList)\n                : state;\n        }\n        case 'ADD_MOVIE_TO_LIST': {\n            let movieList = localStorage.getItem('movieList');\n            if (movieList) {\n                movieList = JSON.parse(movieList);\n                movieList.list.push(action.payload);\n            } else {\n                movieList = { list: [ action.payload ] }\n            }\n            localStorage.setItem('movieList', JSON.stringify(movieList));\n            return movieList;\n        }\n        case 'REMOVE_MOVIE_FROM_LIST': {\n            let movieList = localStorage.getItem('movieList');\n            movieList = JSON.parse(movieList);\n            const updatedList = movieList.list.filter((movieFromList) => movieFromList.imdbID !== action.payload.imdbID) \n            if (updatedList.length) {\n            movieList.list = updatedList;\n            localStorage.setItem('movieList', JSON.stringify(movieList));                   \n                } else {\n                    localStorage.removeItem('movieList');\n                }\n            \n            return movieList;\n            }\n        default:\n            return state;\n\n    }\n}\n\nexport default movieListReducer;","import { combineReducers } from \"redux\";\n\nimport movieListReducer from \"./movieList.reducer\";\n\nconst rootReducer = combineReducers({\n    movieListReducer\n});\n\nexport default rootReducer;","\n// import { Link } from 'react-router-dom';\nimport RBNavbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/container';\nimport Nav from 'react-bootstrap/Nav';\n\nconst Navbar = () => {\n    return (\n        <RBNavbar bg=\"light\"  expand=\"sm\">\n            <Container>\n                <RBNavbar.Brand href=\"/\">\n              <img\n                src=\"/redux-movie-list/logo192.png\"\n                width=\"30\"\n                height=\"30\"\n                alt=\"\"\n                className=\"d-inline-block align-top mr-2\"\n              />\n                Movie Data Base\n            </RBNavbar.Brand>\n                <RBNavbar.Toggle /> \n                    <RBNavbar.Collapse> \n                        <Nav>\n                            <Nav.Link href=\"/\">Home</Nav.Link>\n                            <Nav.Link href=\"/movie-list\">Movie</Nav.Link>  \n                        </Nav> \n                    </RBNavbar.Collapse>\n            </Container>\n\n        </RBNavbar>\n    );\n}\n\nexport default Navbar; ","import { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MovieSearch from './components/MovieSearch';\n\n\nimport configureStore from './redux/store';\nimport Navbar from './components/Navbar';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <Router>\n      <Navbar/> \n      <Switch>\n        <Route exact path=\"/\" component={MovieSearch} />\n        <Route exact path=\"/movie-list\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n","import { applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport loggerMiddleware from './middleware/logger';\nimport monitorReducerEnhancer from './enhancers/monitorReducerEnhancer';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers';\n\nexport default function configureStore(preloadedState) {\n    const middlewares = [loggerMiddleware, thunkMiddleware];\n    const enhancers = [applyMiddleware(...middlewares), monitorReducerEnhancer];\n\n    return createStore(rootReducer, preloadedState, composeWithDevTools(...enhancers))\n}"],"sourceRoot":""}